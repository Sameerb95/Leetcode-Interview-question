class Solution:
    def firstUniqChar(self, s: str) -> int:
        if len(s) == 0:
            return -1
        c = Counter(s)
        for i in c.items():
            if i[1] == 1:
                return(s.index(i[0]))
        return -1
        
Runtime: 64 ms, faster than 96.04% of Python3 online submissions for First Unique Character in a String.
Memory Usage: 14.4 MB, less than 70.64% of Python3 online submissions for First Unique Character in a String.
