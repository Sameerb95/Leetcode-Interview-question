class MyHashSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.output=dict()

    def add(self, key: int) -> None:
        if key not in self.output:
            self.output[key] = 1
            # print(self.output)
        

    def remove(self, key: int) -> None:
        if key in self.output:
            del self.output[key]
                    # print(self.output)
        

    def contains(self, key: int) -> bool:
        """
        Returns true if this set contains the specified element
        """
        # print(self.output)
        if key not in self.output:
            return False
        else:
            return True
        


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)

Runtime: 140 ms, faster than 96.81% of Python3 online submissions for Design HashSet.
Memory Usage: 19.3 MB, less than 45.96% of Python3 online submissions for Design HashSet.
